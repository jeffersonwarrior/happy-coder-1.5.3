name: Build and Analysis
on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint with ESLint
        run: npm run lint

      - name: Lint with Biome
        run: npm run biome:check

      - name: Run tests
        run: npm test
        if: runner.os != 'Windows' # Skip tests on Windows if they have platform issues

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate test coverage
        run: |
          npm test -- --coverage --reporter=json --outputFile=coverage/test-results.json
        continue-on-error: true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-mobile:
    name: Build Mobile Apps
    strategy:
      matrix:
        platform: [ios, android]
        os: [macos-latest] # iOS requires macOS, Android can run on any but macOS has best performance
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main' # Only build mobile on main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Setup EAS CLI
        run: npm install -g eas-cli

      - name: Prebuild ${{ matrix.platform }}
        run: npx expo prebuild --platform ${{ matrix.platform }} --no-install

      - name: Build for ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" == "ios" ]; then
            echo "iOS build would go here (requires Apple Developer account)"
          else
            echo "Android build would go here"
          fi