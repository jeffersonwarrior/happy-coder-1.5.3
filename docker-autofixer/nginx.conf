events {
    worker_connections 1024;
}

http {
    upstream autofixer {
        server autofixer:3000;
    }

    upstream sonarqube {
        server sonarqube:9000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=10r/m;

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name _;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/webhook.crt;
        ssl_certificate_key /etc/nginx/ssl/webhook.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Webhook endpoint with rate limiting and IP restrictions
        location /webhook {
            # Allow localhost and Docker network
            allow 127.0.0.1;
            allow ::1;
            allow 172.25.0.0/16;

            # Allow GitHub webhook IPs
            allow 192.30.252.0/22;
            allow 185.199.108.0/22;
            allow 140.82.112.0/20;
            allow 143.55.64.0/20;
            allow 2a0a:a440::/29;
            allow 2606:50c0::/32;

            # Deny all other IPs
            deny all;

            limit_req zone=webhook burst=5;
            proxy_pass http://autofixer/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Increase body size for large payloads
            client_max_body_size 10M;
        }

        # API endpoints - localhost only
        location /api/ {
            # Allow localhost and Docker network
            allow 127.0.0.1;
            allow ::1;
            allow 172.25.0.0/16;
            deny all;

            proxy_pass http://autofixer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # SonarQube - localhost only
        location /sonar/ {
            # Allow localhost and Docker network
            allow 127.0.0.1;
            allow ::1;
            allow 172.25.0.0/16;
            deny all;

            proxy_pass http://sonarqube/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # Health check - localhost only
        location /health {
            # Allow localhost and Docker network
            allow 127.0.0.1;
            allow ::1;
            allow 172.25.0.0/16;
            deny all;

            proxy_pass http://autofixer/health;
            proxy_set_header X-Forwarded-Proto https;
            access_log off;
        }

        # Default location - localhost only
        location / {
            # Allow localhost and Docker network
            allow 127.0.0.1;
            allow ::1;
            allow 172.25.0.0/16;
            deny all;

            proxy_pass http://autofixer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}